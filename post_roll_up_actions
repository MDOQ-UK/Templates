#!/bin/bash

# helper / setup bits
ARGUMENT_COMPARISON_AHEAD=AHEAD
ARGUMENT_COMPARISON_IDENTICAL=IDENTICAL
ARGUMENT_COMPARISON_BEHIND=BEHIND

ARGUMENT_STEP_BEFORE_COMPOSER=BEFORE_COMPOSER
ARGUMENT_STEP_BEFORE_MAGENTO_COMMANDS=BEFORE_MAGENTO_COMMANDS
ARGUMENT_STEP_BEFORE_DATA_MIGRATION=BEFORE_DATA_MIGRATION
ARGUMENT_STEP_AFTER_DATA_MIGRATION=AFTER_DATA_MIGRATION
ARGUMENT_STEP_BEFORE_COMMON_TOOLS=BEFORE_COMMON_TOOLS
ARGUMENT_STEP_FINAL=FINAL

INPUT="$1-$2"

# helper  methods for instance type
function isProductionInstance(){
    if [[ ${MDOQ_INSTANCE_TYPE} == production_* ]]; then
        return
    fi
    false
}

function isDevelopmentInstance(){
    if [[ ${MDOQ_INSTANCE_TYPE} == "bug" ]]; then
        return
    fi
    false
}

function isReleaseCandidateInstance(){
    if [[ ${MDOQ_INSTANCE_TYPE} == "release_candidate" ]]; then
        return
    fi
    false
}

# helper methods for branch state
function isAhead(){
    if [[ $2 == ${ARGUMENT_COMPARISON_AHEAD} ]]; then
        return
    fi
    false
}

function isBehind(){
    if [[ $2 == ${ARGUMENT_COMPARISON_BEHIND} ]]; then
        return
    fi
    false
}

function isIdentical(){
    if [[ $2 == ${ARGUMENT_COMPARISON_IDENTICAL} ]]; then
        return
    fi
    false
}

# =====================================================================
#    Configuration As Code Starts Here
# =====================================================================

echo -n "Running step ${1} for "
if isProductionInstance; then
    echo -n "production instance "
elif isReleaseCandidateInstance; then
    echo -n "release candidate instance "
elif isDevelopmentInstance; then
    echo -n "development instance "
else
    echo -n "unknown instance type "
fi

echo " with id ${MDOQ_INSTANCE_ID} on branch ${MDOQ_INSTANCE_TICKET_NUMBER} (this branch is ${2} when compared to the default branch)"

case ${MDOQ_INSTANCE_TYPE} in
    production_*)
        # production instance steps
        case $INPUT in
            "$ARGUMENT_STEP_BEFORE_COMPOSER-$ARGUMENT_COMPARISON_AHEAD")
                set -xe
                # do something
                ;;
            "$ARGUMENT_STEP_BEFORE_COMPOSER-$ARGUMENT_COMPARISON_IDENTICAL")
                set -xe
                # do something
            ;;
            "$ARGUMENT_STEP_BEFORE_COMPOSER-$ARGUMENT_COMPARISON_BEHIND")
                set -xe
                # do something
                ;;
            "$ARGUMENT_STEP_BEFORE_MAGENTO_COMMANDS-$ARGUMENT_COMPARISON_AHEAD")
                set -xe
                # do something
                ;;
            "$ARGUMENT_STEP_BEFORE_MAGENTO_COMMANDS-$ARGUMENT_COMPARISON_IDENTICAL")
                set -xe
                # do something
                ;;
            "$ARGUMENT_STEP_BEFORE_MAGENTO_COMMANDS-$ARGUMENT_COMPARISON_BEHIND")
                set -xe
                # do something
                ;;
            "$ARGUMENT_STEP_BEFORE_COMMON_TOOLS-$ARGUMENT_COMPARISON_AHEAD")
                set -xe
                # do something
                ;;
            "$ARGUMENT_STEP_BEFORE_COMMON_TOOLS-$ARGUMENT_COMPARISON_IDENTICAL")
                set -xe
                ;;
            "$ARGUMENT_STEP_BEFORE_COMMON_TOOLS-$ARGUMENT_COMPARISON_BEHIND")
                set -xe
                # do something
                ;;
            "$ARGUMENT_STEP_BEFORE_DATA_MIGRATION-$ARGUMENT_COMPARISON_AHEAD")
                set -xe
                # do something
                ;;
            "$ARGUMENT_STEP_BEFORE_DATA_MIGRATION-$ARGUMENT_COMPARISON_IDENTICAL")
                set -xe
                ;;
            "$ARGUMENT_STEP_BEFORE_DATA_MIGRATION-$ARGUMENT_COMPARISON_BEHIND")
                set -xe
                # do something
                ;;
            "$ARGUMENT_STEP_AFTER_DATA_MIGRATION-$ARGUMENT_COMPARISON_AHEAD")
                set -xe
                # do something
                ;;
            "$ARGUMENT_STEP_AFTER_DATA_MIGRATION-$ARGUMENT_COMPARISON_IDENTICAL")
                set -xe
                # do something
                ;;
            "$ARGUMENT_STEP_AFTER_DATA_MIGRATION-$ARGUMENT_COMPARISON_BEHIND")
                set -xe
                # do something
                ;;
            "$ARGUMENT_STEP_FINAL-$ARGUMENT_COMPARISON_AHEAD")
                set -xe
                # only set these when we know we are ahead?
                # do something
                ;;
            "$ARGUMENT_STEP_FINAL-$ARGUMENT_COMPARISON_IDENTICAL")
                set -xe
                # do something
                ;;
            "$ARGUMENT_STEP_FINAL-$ARGUMENT_COMPARISON_BEHIND")
                set -xe
                # do something
                ;;
            *)
                echo "input not recognized: $INPUT"
                exit 1
        esac
    ;;
    release_candidate)
        # release candidate instance steps
        case $INPUT in
            "$ARGUMENT_STEP_BEFORE_COMPOSER-$ARGUMENT_COMPARISON_AHEAD")
                set -xe
                # do something
                ;;
            "$ARGUMENT_STEP_BEFORE_COMPOSER-$ARGUMENT_COMPARISON_IDENTICAL")
                set -xe
                # do something
            ;;
            "$ARGUMENT_STEP_BEFORE_COMPOSER-$ARGUMENT_COMPARISON_BEHIND")
                set -xe
                # do something
                ;;
            "$ARGUMENT_STEP_BEFORE_MAGENTO_COMMANDS-$ARGUMENT_COMPARISON_AHEAD")
                set -xe
                # do something
                ;;
            "$ARGUMENT_STEP_BEFORE_MAGENTO_COMMANDS-$ARGUMENT_COMPARISON_IDENTICAL")
                set -xe
                # do something
                ;;
            "$ARGUMENT_STEP_BEFORE_MAGENTO_COMMANDS-$ARGUMENT_COMPARISON_BEHIND")
                set -xe
                # do something
                ;;
            "$ARGUMENT_STEP_BEFORE_COMMON_TOOLS-$ARGUMENT_COMPARISON_AHEAD")
                set -xe
                # do something
                ;;
            "$ARGUMENT_STEP_BEFORE_COMMON_TOOLS-$ARGUMENT_COMPARISON_IDENTICAL")
                set -xe
                ;;
            "$ARGUMENT_STEP_BEFORE_COMMON_TOOLS-$ARGUMENT_COMPARISON_BEHIND")
                set -xe
                # do something
                ;;
            "$ARGUMENT_STEP_BEFORE_DATA_MIGRATION-$ARGUMENT_COMPARISON_AHEAD")
                set -xe
                # do something
                ;;
            "$ARGUMENT_STEP_BEFORE_DATA_MIGRATION-$ARGUMENT_COMPARISON_IDENTICAL")
                set -xe
                ;;
            "$ARGUMENT_STEP_BEFORE_DATA_MIGRATION-$ARGUMENT_COMPARISON_BEHIND")
                set -xe
                # do something
                ;;
            "$ARGUMENT_STEP_AFTER_DATA_MIGRATION-$ARGUMENT_COMPARISON_AHEAD")
                set -xe
                # do something
                ;;
            "$ARGUMENT_STEP_AFTER_DATA_MIGRATION-$ARGUMENT_COMPARISON_IDENTICAL")
                set -xe
                # do something
                ;;
            "$ARGUMENT_STEP_AFTER_DATA_MIGRATION-$ARGUMENT_COMPARISON_BEHIND")
                set -xe
                # do something
                ;;
            "$ARGUMENT_STEP_FINAL-$ARGUMENT_COMPARISON_AHEAD")
                set -xe
                # only set these when we know we are ahead?
                # do something
                ;;
            "$ARGUMENT_STEP_FINAL-$ARGUMENT_COMPARISON_IDENTICAL")
                set -xe
                # do something
                ;;
            "$ARGUMENT_STEP_FINAL-$ARGUMENT_COMPARISON_BEHIND")
                set -xe
                # do something
                ;;
            *)
                echo "input not recognized: $INPUT"
                exit 1
        esac
    ;;
    bug)
        # development instance steps
        case $INPUT in
            "$ARGUMENT_STEP_BEFORE_COMPOSER-$ARGUMENT_COMPARISON_AHEAD")
                set -xe
                # do something
                ;;
            "$ARGUMENT_STEP_BEFORE_COMPOSER-$ARGUMENT_COMPARISON_IDENTICAL")
                set -xe
                # do something
            ;;
            "$ARGUMENT_STEP_BEFORE_COMPOSER-$ARGUMENT_COMPARISON_BEHIND")
                set -xe
                # do something
                ;;
            "$ARGUMENT_STEP_BEFORE_MAGENTO_COMMANDS-$ARGUMENT_COMPARISON_AHEAD")
                set -xe
                # do something
                ;;
            "$ARGUMENT_STEP_BEFORE_MAGENTO_COMMANDS-$ARGUMENT_COMPARISON_IDENTICAL")
                set -xe
                # do something
                ;;
            "$ARGUMENT_STEP_BEFORE_MAGENTO_COMMANDS-$ARGUMENT_COMPARISON_BEHIND")
                set -xe
                # do something
                ;;
            "$ARGUMENT_STEP_BEFORE_COMMON_TOOLS-$ARGUMENT_COMPARISON_AHEAD")
                set -xe
                # do something
                ;;
            "$ARGUMENT_STEP_BEFORE_COMMON_TOOLS-$ARGUMENT_COMPARISON_IDENTICAL")
                set -xe
                ;;
            "$ARGUMENT_STEP_BEFORE_COMMON_TOOLS-$ARGUMENT_COMPARISON_BEHIND")
                set -xe
                # do something
                ;;
            "$ARGUMENT_STEP_BEFORE_DATA_MIGRATION-$ARGUMENT_COMPARISON_AHEAD")
                set -xe
                # do something
                ;;
            "$ARGUMENT_STEP_BEFORE_DATA_MIGRATION-$ARGUMENT_COMPARISON_IDENTICAL")
                set -xe
                ;;
            "$ARGUMENT_STEP_BEFORE_DATA_MIGRATION-$ARGUMENT_COMPARISON_BEHIND")
                set -xe
                # do something
                ;;
            "$ARGUMENT_STEP_AFTER_DATA_MIGRATION-$ARGUMENT_COMPARISON_AHEAD")
                set -xe
                # do something
                ;;
            "$ARGUMENT_STEP_AFTER_DATA_MIGRATION-$ARGUMENT_COMPARISON_IDENTICAL")
                set -xe
                # do something
                ;;
            "$ARGUMENT_STEP_AFTER_DATA_MIGRATION-$ARGUMENT_COMPARISON_BEHIND")
                set -xe
                # do something
                ;;
            "$ARGUMENT_STEP_FINAL-$ARGUMENT_COMPARISON_AHEAD")
                set -xe
                # only set these when we know we are ahead?
                # do something
                ;;
            "$ARGUMENT_STEP_FINAL-$ARGUMENT_COMPARISON_IDENTICAL")
                set -xe
                # do something
                ;;
            "$ARGUMENT_STEP_FINAL-$ARGUMENT_COMPARISON_BEHIND")
                set -xe
                # do something
                ;;
            *)
                echo "input not recognized: $INPUT"
                exit 1
        esac
    ;;
    *)
        echo "instance type not recongized: ${MDOQ_INSTANCE_TYPE}"
        exit 1
esac
